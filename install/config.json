{
    "prefix": "aws_best_practices",
    "tags": [{
            "Key": "environment",
            "Value": "monitoring"
        },
        {
            "Key": "project",
            "Value": "aws-best-practices-checks"
        }
    ],
    "dynamodb": {
        "tables": ["checks", "settings", "log"]
    },
    "iam": {
        "configRoleName": "config_role"
    },
    "lambda": {
        "defaults": {
            "memory": 128,
            "timeout": 5
        },
        "includeFolders": ["lib", "modules"],
        "functions": {
            "settings": {
                "functionName": "settings",
                "fileLocation": "lambdas/aws_best_practices_settings.py",
                "iamPolicies": [{
                        "name": "dynamodb_access",
                        "actions": [
                            "dynamodb:GetItem",
                            "dynamodb:PutItem",
                            "dynamodb:UpdateItem",
                            "dynamodb:DeleteItem",
                            "dynamodb:Query",
                            "dynamodb:Scan",
                            "dynamodb:BatchGetItem",
                            "dynamodb:BatchWriteItem"
                        ],
                        "resources": [
                            "arn:aws:dynamodb:***REGION***:***ACCOUNT_ID***:table/***PREFIX***_settings"
                        ]
                    },
                    {
                        "name": "event_bridge_access",
                        "actions": [
                            "events:DescribeRule",
                            "events:PutRule"
                        ],
                        "resources": ["*"]
                    }
                ]
            },
            "checks": {
                "functionName": "checks",
                "fileLocation": "lambdas/aws_best_practices_checks.py",
                "iamPolicies": [{
                    "name": "dynamodb_access",
                    "actions": [
                        "dynamodb:GetItem",
                        "dynamodb:PutItem",
                        "dynamodb:UpdateItem",
                        "dynamodb:DeleteItem",
                        "dynamodb:Query",
                        "dynamodb:Scan",
                        "dynamodb:BatchGetItem",
                        "dynamodb:BatchWriteItem"
                    ],
                    "resources": [
                        "arn:aws:dynamodb:***REGION***:***ACCOUNT_ID***:table/***PREFIX***_checks"
                    ]
                }]
            },
            "run": {
                "timeout": 60,
                "functionName": "run",
                "fileLocation": "lambdas/aws_best_practices_run.py",
                "environment": {
                    "senderEmail": "SET SENDER EMAIL ADDRESS HERE OR USE AWS_SENDER_EMAIL environment variable",
                    "recipientEmail": "SET RECIPIENT EMAIL ADDRESS HERE OR USE AWS_RECIPIENT_EMAIL environment variable"
                },
                "includeFolders": ["email_templates"],
                "iamPolicies": [{
                        "name": "dynamodb_access",
                        "actions": [
                            "dynamodb:GetItem",
                            "dynamodb:PutItem",
                            "dynamodb:UpdateItem",
                            "dynamodb:DeleteItem",
                            "dynamodb:Query",
                            "dynamodb:Scan",
                            "dynamodb:BatchGetItem",
                            "dynamodb:BatchWriteItem"
                        ],
                        "resources": [
                            "arn:aws:dynamodb:***REGION***:***ACCOUNT_ID***:table/***PREFIX***_checks",
                            "arn:aws:dynamodb:***REGION***:***ACCOUNT_ID***:table/***PREFIX***_log"
                        ]
                    },
                    {
                        "name": "ses_access",
                        "actions": [
                            "ses:SendEmail",
                            "ses:SendRawEmail"
                        ],
                        "resources": ["arn:aws:ses:***REGION***:***ACCOUNT_ID***:identity/***SENDER_EMAIL***"]
                    },
                    {
                        "name": "general_access",
                        "actions": [
                            "s3:ListAllMyBuckets",
                            "s3:GetBucketAcl",
                            "s3:GetBucketPolicy",
                            "s3:GetBucketPolicyStatus",
                            "s3:GetBucketPublicAccessBlock",
                            "s3:GetBucketLocation",
                            "support:DescribeSeverityLevels",
                            "budgets:DescribeBudgets",
                            "budgets:ViewBudget",
                            "ec2:DescribeRegions",
                            "ec2:DescribeAddresses",
                            "iam:GetAccountPasswordPolicy",
                            "iam:GetAccountSummary",
                            "tag:GetResources"
                        ],
                        "resources": ["*"]
                    }
                ]
            },
            "schedule": {
                "functionName": "schedule",
                "fileLocation": "lambdas/aws_best_practices_schedule.py"
            }
        }
    },
    "api": {

    },
    "ses": {
        "senderEmail": "SET SENDER EMAIL ADDRESS HERE OR USE AWS_SENDER_EMAIL environment variable"
    },
    "schedule": {
        "ruleNmae": "schedule",
        "defaultSchedule": {
            "minute": "0",
            "hour": "0",
            "day": "*",
            "month": "*",
            "year": "*"
        }
    },
    "checks": {
        "modules": [{
            "name": "basic",
            "version": "1.0",
            "checks": [{
                    "name": "NO_MFA_ON_ROOT",
                    "emailTemplates": {
                        "baseFileName": "basic_no_mfa_on_root"
                    }
                },
                {
                    "name": "NO_PASSWORD_POLICY",
                    "emailTemplates": {
                        "baseFileName": "basic_no_password_policy"
                    }
                },
                {
                    "name": "PUBLIC_BUCKETS",
                    "emailTemplates": {
                        "baseFileName": "basic_s3_public_access",
                        "itemFileName": "basic_s3_public_access_item"
                    }
                },
                {
                    "name": "MISSING_TAGS",
                    "emailTemplates": {
                        "baseFileName": "basic_missing_tags",
                        "itemFileName": "basic_missing_tags_item"
                    },
                    "config": {
                        "regions": ["us-west-2", "us-east-1"],
                        "requiredTags": ["environment", "project"],
                        "resources": [
                            "ec2",
                            "acm",
                            "s3",
                            "rds",
                            "lambda",
                            "dynamodb",
                            "cloudwatch",
                            "elasticfilesystem",
                            "sagemaker",
                            "redshift"
                        ]
                    }
                },
                {
                    "name": "NO_BUSINESS_SUPPORT",
                    "emailTemplates": {
                        "baseFileName": "basic_no_premium_support"
                    }
                },
                {
                    "name": "NO_BUDGET",
                    "emailTemplates": {
                        "baseFileName": "basic_no_budget"
                    }
                },
                {
                    "name": "UNUSED_EIP",
                    "emailTemplates": {
                        "baseFileName": "basic_unused_eip",
                        "itemFileName": "basic_unused_eip_item"
                    },
                    "config": {
                        "regions": ["us-west-2", "us-east-1"]
                    }
                }
            ]
        }]
    }
}
